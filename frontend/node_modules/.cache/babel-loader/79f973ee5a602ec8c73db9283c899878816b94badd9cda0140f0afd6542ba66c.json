{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\omie1\\\\Desktop\\\\AWS react\\\\frontend\\\\src\\\\pages\\\\Modules.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { apiClient } from \"../utils/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport \"./Modules.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modules = () => {\n  _s();\n  const [modules, setModules] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedModule, setSelectedModule] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [moduleQuestions, setModuleQuestions] = useState([]);\n  const {\n    updateProgress\n  } = useAuth();\n  useEffect(() => {\n    fetchModules();\n  }, []);\n  const fetchModules = async () => {\n    try {\n      const response = await apiClient.modules.getAll();\n      setModules(response.data);\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      // Fallback to placeholder data if API fails\n      setModules([{\n        id: 1,\n        title: \"Module 1: Cloud Concepts Overview\",\n        questions: 15,\n        completed: false\n      }, {\n        id: 2,\n        title: \"Module 2: AWS Core Services\",\n        questions: 20,\n        completed: false\n      }, {\n        id: 3,\n        title: \"Module 3: Security and Compliance\",\n        questions: 18,\n        completed: false\n      }, {\n        id: 4,\n        title: \"Module 4: Pricing and Support\",\n        questions: 12,\n        completed: false\n      }, {\n        id: 5,\n        title: \"Module 5: Architecture and Design\",\n        questions: 16,\n        completed: false\n      }, {\n        id: 6,\n        title: \"Module 6: Deployment and Operations\",\n        questions: 14,\n        completed: false\n      }, {\n        id: 7,\n        title: \"Module 7: Networking and Content Delivery\",\n        questions: 17,\n        completed: false\n      }, {\n        id: 8,\n        title: \"Module 8: Storage and Databases\",\n        questions: 19,\n        completed: false\n      }, {\n        id: 9,\n        title: \"Module 9: Analytics and Machine Learning\",\n        questions: 13,\n        completed: false\n      }, {\n        id: 10,\n        title: \"Module 10: Management and Governance\",\n        questions: 15,\n        completed: false\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const startModule = async module => {\n    try {\n      setLoading(true);\n      const response = await apiClient.modules.getById(module.id);\n      setModuleQuestions(response.data.questions || []);\n      setSelectedModule(module);\n      setCurrentQuestion(0);\n      setUserAnswers({});\n      setShowResults(false);\n    } catch (error) {\n      console.error(\"Error loading module questions:\", error);\n      // Use sample questions if API fails\n      setModuleQuestions([{\n        question_id: 1,\n        question_text: \"Sample question - your JSON data will replace this\",\n        options: [{\n          option_id: 1,\n          option_text: \"Option A\"\n        }, {\n          option_id: 2,\n          option_text: \"Option B\"\n        }, {\n          option_id: 3,\n          option_text: \"Option C\"\n        }, {\n          option_id: 4,\n          option_text: \"Option D\"\n        }],\n        correct_answer_id: 1\n      }]);\n      setSelectedModule(module);\n      setCurrentQuestion(0);\n      setUserAnswers({});\n      setShowResults(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswer = (questionId, answerId) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [questionId]: answerId\n    }));\n  };\n  const handleMultipleAnswer = (questionId, answerId) => {\n    setUserAnswers(prev => {\n      const currentAnswers = prev[questionId] || [];\n      const isSelected = currentAnswers.includes(answerId);\n      if (isSelected) {\n        return {\n          ...prev,\n          [questionId]: currentAnswers.filter(id => id !== answerId)\n        };\n      } else {\n        return {\n          ...prev,\n          [questionId]: [...currentAnswers, answerId]\n        };\n      }\n    });\n  };\n  const nextQuestion = async () => {\n    if (currentQuestion < moduleQuestions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      const correctAnswers = moduleQuestions.filter(q => {\n        const userAnswer = userAnswers[q.question_id];\n        const correctAnswer = q.correct_answer_id;\n        if (Array.isArray(correctAnswer)) {\n          // Multiple correct answers - check if user selected all correct ones\n          return Array.isArray(userAnswer) && correctAnswer.length === userAnswer.length && correctAnswer.every(id => userAnswer.includes(id));\n        } else {\n          // Single correct answer\n          return userAnswer === correctAnswer;\n        }\n      }).length;\n      const score = Math.round(correctAnswers / moduleQuestions.length * 100);\n      try {\n        await updateProgress({\n          moduleId: selectedModule.id,\n          score,\n          timeSpent: 45 // You could track actual time\n        });\n      } catch (error) {\n        console.error(\"Error updating progress:\", error);\n      }\n      setShowResults(true);\n    }\n  };\n  const backToModules = () => {\n    setSelectedModule(null);\n    setShowResults(false);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Loading modules...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n  if (selectedModule) {\n    const currentQ = moduleQuestions[currentQuestion];\n    const isMultipleChoice = Array.isArray(currentQ === null || currentQ === void 0 ? void 0 : currentQ.correct_answer_id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-quiz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: backToModules,\n            className: \"back-btn\",\n            children: \"\\u2190 Back to Modules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: selectedModule.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${(currentQuestion + 1) / moduleQuestions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestion + 1, \" of \", moduleQuestions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), !showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: currentQ === null || currentQ === void 0 ? void 0 : currentQ.question_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), isMultipleChoice && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"multiple-choice-hint\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Select all that apply (Multiple answers required)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-options\",\n            children: currentQ === null || currentQ === void 0 ? void 0 : currentQ.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: isMultipleChoice ? \"checkbox\" : \"radio\",\n                id: `option${option.option_id}`,\n                name: \"answer\",\n                checked: isMultipleChoice ? (userAnswers[currentQ.question_id] || []).includes(option.option_id) : userAnswers[currentQ.question_id] === option.option_id,\n                onChange: () => isMultipleChoice ? handleMultipleAnswer(currentQ.question_id, option.option_id) : handleAnswer(currentQ.question_id, option.option_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `option${option.option_id}`,\n                children: option.option_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, option.option_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextQuestion,\n            className: \"btn btn-primary next-btn\",\n            children: currentQuestion < moduleQuestions.length - 1 ? \"Next Question\" : \"Finish Module\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Module Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You have completed \", selectedModule.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: \"85%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: moduleQuestions.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: backToModules,\n            className: \"btn btn-primary\",\n            children: \"Back to Modules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modules\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modules-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Learning Modules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"10 comprehensive modules covering all AWS Cloud Practitioner exam domains\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modules-grid\",\n        children: modules.map(module => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"module-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: module.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-count\",\n              children: [module.questions, \" questions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: module.completed ? \"100%\" : \"0%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-text\",\n              children: module.completed ? \"Completed\" : \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startModule(module),\n            className: \"btn btn-primary module-btn\",\n            children: module.completed ? \"Review\" : \"Start Module\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, module.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(Modules, \"NrdbTmUnEvfvmAxLjNQV0lU3ib8=\", false, function () {\n  return [useAuth];\n});\n_c = Modules;\nexport default Modules;\nvar _c;\n$RefreshReg$(_c, \"Modules\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","apiClient","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","Modules","modules","setModules","loading","setLoading","selectedModule","setSelectedModule","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","showResults","setShowResults","moduleQuestions","setModuleQuestions","updateProgress","fetchModules","response","getAll","data","error","console","id","title","questions","completed","startModule","module","getById","question_id","question_text","options","option_id","option_text","correct_answer_id","handleAnswer","questionId","answerId","prev","handleMultipleAnswer","currentAnswers","isSelected","includes","filter","nextQuestion","length","correctAnswers","q","userAnswer","correctAnswer","Array","isArray","every","score","Math","round","moduleId","timeSpent","backToModules","message","fileName","lineNumber","columnNumber","currentQ","isMultipleChoice","className","children","onClick","style","width","map","option","type","name","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/omie1/Desktop/AWS react/frontend/src/pages/Modules.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { apiClient } from \"../utils/api\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\nimport \"./Modules.css\"\n\nconst Modules = () => {\n  const [modules, setModules] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedModule, setSelectedModule] = useState(null)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [userAnswers, setUserAnswers] = useState({})\n  const [showResults, setShowResults] = useState(false)\n  const [moduleQuestions, setModuleQuestions] = useState([])\n  const { updateProgress } = useAuth()\n\n  useEffect(() => {\n    fetchModules()\n  }, [])\n\n  const fetchModules = async () => {\n    try {\n      const response = await apiClient.modules.getAll()\n      setModules(response.data)\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error)\n      // Fallback to placeholder data if API fails\n      setModules([\n        { id: 1, title: \"Module 1: Cloud Concepts Overview\", questions: 15, completed: false },\n        { id: 2, title: \"Module 2: AWS Core Services\", questions: 20, completed: false },\n        { id: 3, title: \"Module 3: Security and Compliance\", questions: 18, completed: false },\n        { id: 4, title: \"Module 4: Pricing and Support\", questions: 12, completed: false },\n        { id: 5, title: \"Module 5: Architecture and Design\", questions: 16, completed: false },\n        { id: 6, title: \"Module 6: Deployment and Operations\", questions: 14, completed: false },\n        { id: 7, title: \"Module 7: Networking and Content Delivery\", questions: 17, completed: false },\n        { id: 8, title: \"Module 8: Storage and Databases\", questions: 19, completed: false },\n        { id: 9, title: \"Module 9: Analytics and Machine Learning\", questions: 13, completed: false },\n        { id: 10, title: \"Module 10: Management and Governance\", questions: 15, completed: false },\n      ])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const startModule = async (module) => {\n    try {\n      setLoading(true)\n      const response = await apiClient.modules.getById(module.id)\n      setModuleQuestions(response.data.questions || [])\n      setSelectedModule(module)\n      setCurrentQuestion(0)\n      setUserAnswers({})\n      setShowResults(false)\n    } catch (error) {\n      console.error(\"Error loading module questions:\", error)\n      // Use sample questions if API fails\n      setModuleQuestions([\n        {\n          question_id: 1,\n          question_text: \"Sample question - your JSON data will replace this\",\n          options: [\n            { option_id: 1, option_text: \"Option A\" },\n            { option_id: 2, option_text: \"Option B\" },\n            { option_id: 3, option_text: \"Option C\" },\n            { option_id: 4, option_text: \"Option D\" },\n          ],\n          correct_answer_id: 1,\n        },\n      ])\n      setSelectedModule(module)\n      setCurrentQuestion(0)\n      setUserAnswers({})\n      setShowResults(false)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleAnswer = (questionId, answerId) => {\n    setUserAnswers((prev) => ({\n      ...prev,\n      [questionId]: answerId,\n    }))\n  }\n\n  const handleMultipleAnswer = (questionId, answerId) => {\n    setUserAnswers((prev) => {\n      const currentAnswers = prev[questionId] || []\n      const isSelected = currentAnswers.includes(answerId)\n\n      if (isSelected) {\n        return {\n          ...prev,\n          [questionId]: currentAnswers.filter((id) => id !== answerId),\n        }\n      } else {\n        return {\n          ...prev,\n          [questionId]: [...currentAnswers, answerId],\n        }\n      }\n    })\n  }\n\n  const nextQuestion = async () => {\n    if (currentQuestion < moduleQuestions.length - 1) {\n      setCurrentQuestion((prev) => prev + 1)\n    } else {\n      const correctAnswers = moduleQuestions.filter((q) => {\n        const userAnswer = userAnswers[q.question_id]\n        const correctAnswer = q.correct_answer_id\n\n        if (Array.isArray(correctAnswer)) {\n          // Multiple correct answers - check if user selected all correct ones\n          return (\n            Array.isArray(userAnswer) &&\n            correctAnswer.length === userAnswer.length &&\n            correctAnswer.every((id) => userAnswer.includes(id))\n          )\n        } else {\n          // Single correct answer\n          return userAnswer === correctAnswer\n        }\n      }).length\n\n      const score = Math.round((correctAnswers / moduleQuestions.length) * 100)\n\n      try {\n        await updateProgress({\n          moduleId: selectedModule.id,\n          score,\n          timeSpent: 45, // You could track actual time\n        })\n      } catch (error) {\n        console.error(\"Error updating progress:\", error)\n      }\n\n      setShowResults(true)\n    }\n  }\n\n  const backToModules = () => {\n    setSelectedModule(null)\n    setShowResults(false)\n  }\n\n  if (loading) {\n    return <LoadingSpinner message=\"Loading modules...\" />\n  }\n\n  if (selectedModule) {\n    const currentQ = moduleQuestions[currentQuestion]\n    const isMultipleChoice = Array.isArray(currentQ?.correct_answer_id)\n\n    return (\n      <div className=\"module-quiz\">\n        <div className=\"container\">\n          <div className=\"quiz-header\">\n            <button onClick={backToModules} className=\"back-btn\">\n              ← Back to Modules\n            </button>\n            <h1>{selectedModule.title}</h1>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{ width: `${((currentQuestion + 1) / moduleQuestions.length) * 100}%` }}\n              ></div>\n            </div>\n            <p>\n              Question {currentQuestion + 1} of {moduleQuestions.length}\n            </p>\n          </div>\n\n          {!showResults ? (\n            <div className=\"question-card\">\n              <h3>{currentQ?.question_text}</h3>\n              {isMultipleChoice && (\n                <p className=\"multiple-choice-hint\">\n                  <strong>Select all that apply (Multiple answers required)</strong>\n                </p>\n              )}\n\n              <div className=\"question-options\">\n                {currentQ?.options.map((option) => (\n                  <div key={option.option_id} className=\"option\">\n                    <input\n                      type={isMultipleChoice ? \"checkbox\" : \"radio\"}\n                      id={`option${option.option_id}`}\n                      name=\"answer\"\n                      checked={\n                        isMultipleChoice\n                          ? (userAnswers[currentQ.question_id] || []).includes(option.option_id)\n                          : userAnswers[currentQ.question_id] === option.option_id\n                      }\n                      onChange={() =>\n                        isMultipleChoice\n                          ? handleMultipleAnswer(currentQ.question_id, option.option_id)\n                          : handleAnswer(currentQ.question_id, option.option_id)\n                      }\n                    />\n                    <label htmlFor={`option${option.option_id}`}>{option.option_text}</label>\n                  </div>\n                ))}\n              </div>\n\n              <button onClick={nextQuestion} className=\"btn btn-primary next-btn\">\n                {currentQuestion < moduleQuestions.length - 1 ? \"Next Question\" : \"Finish Module\"}\n              </button>\n            </div>\n          ) : (\n            <div className=\"results-card\">\n              <h2>Module Complete!</h2>\n              <p>You have completed {selectedModule.title}</p>\n              <div className=\"results-stats\">\n                <div className=\"stat\">\n                  <span className=\"stat-number\">85%</span>\n                  <span className=\"stat-label\">Score</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-number\">{moduleQuestions.length}</span>\n                  <span className=\"stat-label\">Questions</span>\n                </div>\n              </div>\n              <button onClick={backToModules} className=\"btn btn-primary\">\n                Back to Modules\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"modules\">\n      <div className=\"container\">\n        <div className=\"modules-header\">\n          <h1>Learning Modules</h1>\n          <p>10 comprehensive modules covering all AWS Cloud Practitioner exam domains</p>\n        </div>\n\n        <div className=\"modules-grid\">\n          {modules.map((module) => (\n            <div key={module.id} className=\"module-card\">\n              <div className=\"module-header\">\n                <h3>{module.title}</h3>\n                <span className=\"question-count\">{module.questions} questions</span>\n              </div>\n\n              <div className=\"module-progress\">\n                <div className=\"progress-bar\">\n                  <div className=\"progress-fill\" style={{ width: module.completed ? \"100%\" : \"0%\" }}></div>\n                </div>\n                <span className=\"progress-text\">{module.completed ? \"Completed\" : \"Not Started\"}</span>\n              </div>\n\n              <button onClick={() => startModule(module)} className=\"btn btn-primary module-btn\">\n                {module.completed ? \"Review\" : \"Start Module\"}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modules\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}