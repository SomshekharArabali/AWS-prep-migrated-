{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\omie1\\\\Desktop\\\\AWS react\\\\frontend\\\\src\\\\pages\\\\Modules.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { apiClient } from \"../utils/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport \"./Modules.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modules = () => {\n  _s();\n  const [modules, setModules] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedModule, setSelectedModule] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [moduleQuestions, setModuleQuestions] = useState([]);\n  const {\n    updateProgress\n  } = useAuth();\n  useEffect(() => {\n    fetchModules();\n  }, []);\n  const fetchModules = async () => {\n    try {\n      const response = await apiClient.modules.getAll();\n      setModules(response.data);\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error);\n      // Fallback to placeholder data if API fails\n      setModules([{\n        id: 1,\n        title: \"Module 1: Cloud Concepts Overview\",\n        questions: 15,\n        completed: false\n      }, {\n        id: 2,\n        title: \"Module 2: AWS Core Services\",\n        questions: 20,\n        completed: false\n      }, {\n        id: 3,\n        title: \"Module 3: Security and Compliance\",\n        questions: 18,\n        completed: false\n      }, {\n        id: 4,\n        title: \"Module 4: Pricing and Support\",\n        questions: 12,\n        completed: false\n      }, {\n        id: 5,\n        title: \"Module 5: Architecture and Design\",\n        questions: 16,\n        completed: false\n      }, {\n        id: 6,\n        title: \"Module 6: Deployment and Operations\",\n        questions: 14,\n        completed: false\n      }, {\n        id: 7,\n        title: \"Module 7: Networking and Content Delivery\",\n        questions: 17,\n        completed: false\n      }, {\n        id: 8,\n        title: \"Module 8: Storage and Databases\",\n        questions: 19,\n        completed: false\n      }, {\n        id: 9,\n        title: \"Module 9: Analytics and Machine Learning\",\n        questions: 13,\n        completed: false\n      }, {\n        id: 10,\n        title: \"Module 10: Management and Governance\",\n        questions: 15,\n        completed: false\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const startModule = async module => {\n    try {\n      setLoading(true);\n      const response = await apiClient.modules.getById(module.id);\n      setModuleQuestions(response.data.questions || []);\n      setSelectedModule(module);\n      setCurrentQuestion(0);\n      setUserAnswers({});\n      setShowResults(false);\n    } catch (error) {\n      console.error(\"Error loading module questions:\", error);\n      // Use sample questions if API fails\n      setModuleQuestions([{\n        question_id: 1,\n        question_text: \"Sample question - your JSON data will replace this\",\n        options: [{\n          option_id: 1,\n          option_text: \"Option A\"\n        }, {\n          option_id: 2,\n          option_text: \"Option B\"\n        }, {\n          option_id: 3,\n          option_text: \"Option C\"\n        }, {\n          option_id: 4,\n          option_text: \"Option D\"\n        }],\n        correct_answer_id: 1\n      }]);\n      setSelectedModule(module);\n      setCurrentQuestion(0);\n      setUserAnswers({});\n      setShowResults(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswer = (questionId, answerId) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [questionId]: answerId\n    }));\n  };\n  const nextQuestion = async () => {\n    if (currentQuestion < moduleQuestions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      const correctAnswers = moduleQuestions.filter(q => userAnswers[q.question_id] === q.correct_answer_id).length;\n      const score = Math.round(correctAnswers / moduleQuestions.length * 100);\n      try {\n        await updateProgress({\n          moduleId: selectedModule.id,\n          score,\n          timeSpent: 45 // You could track actual time\n        });\n      } catch (error) {\n        console.error(\"Error updating progress:\", error);\n      }\n      setShowResults(true);\n    }\n  };\n  const backToModules = () => {\n    setSelectedModule(null);\n    setShowResults(false);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Loading modules...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  if (selectedModule) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"module-quiz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: backToModules,\n            className: \"back-btn\",\n            children: \"\\u2190 Back to Modules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: selectedModule.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${(currentQuestion + 1) / moduleQuestions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestion + 1, \" of \", moduleQuestions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), !showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: moduleQuestions[currentQuestion].question_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is where your JSON question data will be displayed. The question text, options, and correct answers will be loaded from your JSON files.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-options\",\n            children: moduleQuestions[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `option${option.option_id}`,\n                name: \"answer\",\n                checked: userAnswers[moduleQuestions[currentQuestion].question_id] === option.option_id,\n                onChange: () => handleAnswer(moduleQuestions[currentQuestion].question_id, option.option_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `option${option.option_id}`,\n                children: option.option_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this)]\n            }, option.option_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextQuestion,\n            className: \"btn btn-primary next-btn\",\n            children: currentQuestion < moduleQuestions.length - 1 ? \"Next Question\" : \"Finish Module\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Module Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You have completed \", selectedModule.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: \"85%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: moduleQuestions.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: backToModules,\n            className: \"btn btn-primary\",\n            children: \"Back to Modules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modules\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modules-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Learning Modules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"10 comprehensive modules covering all AWS Cloud Practitioner exam domains\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modules-grid\",\n        children: modules.map(module => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"module-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: module.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"question-count\",\n              children: [module.questions, \" questions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"module-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: module.completed ? \"100%\" : \"0%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-text\",\n              children: module.completed ? \"Completed\" : \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startModule(module),\n            className: \"btn btn-primary module-btn\",\n            children: module.completed ? \"Review\" : \"Start Module\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, module.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(Modules, \"NrdbTmUnEvfvmAxLjNQV0lU3ib8=\", false, function () {\n  return [useAuth];\n});\n_c = Modules;\nexport default Modules;\nvar _c;\n$RefreshReg$(_c, \"Modules\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","apiClient","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","Modules","modules","setModules","loading","setLoading","selectedModule","setSelectedModule","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","showResults","setShowResults","moduleQuestions","setModuleQuestions","updateProgress","fetchModules","response","getAll","data","error","console","id","title","questions","completed","startModule","module","getById","question_id","question_text","options","option_id","option_text","correct_answer_id","handleAnswer","questionId","answerId","prev","nextQuestion","length","correctAnswers","filter","q","score","Math","round","moduleId","timeSpent","backToModules","message","fileName","lineNumber","columnNumber","className","children","onClick","style","width","map","option","type","name","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/omie1/Desktop/AWS react/frontend/src/pages/Modules.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { apiClient } from \"../utils/api\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\nimport \"./Modules.css\"\n\nconst Modules = () => {\n  const [modules, setModules] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedModule, setSelectedModule] = useState(null)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [userAnswers, setUserAnswers] = useState({})\n  const [showResults, setShowResults] = useState(false)\n  const [moduleQuestions, setModuleQuestions] = useState([])\n  const { updateProgress } = useAuth()\n\n  useEffect(() => {\n    fetchModules()\n  }, [])\n\n  const fetchModules = async () => {\n    try {\n      const response = await apiClient.modules.getAll()\n      setModules(response.data)\n    } catch (error) {\n      console.error(\"Error fetching modules:\", error)\n      // Fallback to placeholder data if API fails\n      setModules([\n        { id: 1, title: \"Module 1: Cloud Concepts Overview\", questions: 15, completed: false },\n        { id: 2, title: \"Module 2: AWS Core Services\", questions: 20, completed: false },\n        { id: 3, title: \"Module 3: Security and Compliance\", questions: 18, completed: false },\n        { id: 4, title: \"Module 4: Pricing and Support\", questions: 12, completed: false },\n        { id: 5, title: \"Module 5: Architecture and Design\", questions: 16, completed: false },\n        { id: 6, title: \"Module 6: Deployment and Operations\", questions: 14, completed: false },\n        { id: 7, title: \"Module 7: Networking and Content Delivery\", questions: 17, completed: false },\n        { id: 8, title: \"Module 8: Storage and Databases\", questions: 19, completed: false },\n        { id: 9, title: \"Module 9: Analytics and Machine Learning\", questions: 13, completed: false },\n        { id: 10, title: \"Module 10: Management and Governance\", questions: 15, completed: false },\n      ])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const startModule = async (module) => {\n    try {\n      setLoading(true)\n      const response = await apiClient.modules.getById(module.id)\n      setModuleQuestions(response.data.questions || [])\n      setSelectedModule(module)\n      setCurrentQuestion(0)\n      setUserAnswers({})\n      setShowResults(false)\n    } catch (error) {\n      console.error(\"Error loading module questions:\", error)\n      // Use sample questions if API fails\n      setModuleQuestions([\n        {\n          question_id: 1,\n          question_text: \"Sample question - your JSON data will replace this\",\n          options: [\n            { option_id: 1, option_text: \"Option A\" },\n            { option_id: 2, option_text: \"Option B\" },\n            { option_id: 3, option_text: \"Option C\" },\n            { option_id: 4, option_text: \"Option D\" },\n          ],\n          correct_answer_id: 1,\n        },\n      ])\n      setSelectedModule(module)\n      setCurrentQuestion(0)\n      setUserAnswers({})\n      setShowResults(false)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleAnswer = (questionId, answerId) => {\n    setUserAnswers((prev) => ({\n      ...prev,\n      [questionId]: answerId,\n    }))\n  }\n\n  const nextQuestion = async () => {\n    if (currentQuestion < moduleQuestions.length - 1) {\n      setCurrentQuestion((prev) => prev + 1)\n    } else {\n      const correctAnswers = moduleQuestions.filter((q) => userAnswers[q.question_id] === q.correct_answer_id).length\n      const score = Math.round((correctAnswers / moduleQuestions.length) * 100)\n\n      try {\n        await updateProgress({\n          moduleId: selectedModule.id,\n          score,\n          timeSpent: 45, // You could track actual time\n        })\n      } catch (error) {\n        console.error(\"Error updating progress:\", error)\n      }\n\n      setShowResults(true)\n    }\n  }\n\n  const backToModules = () => {\n    setSelectedModule(null)\n    setShowResults(false)\n  }\n\n  if (loading) {\n    return <LoadingSpinner message=\"Loading modules...\" />\n  }\n\n  if (selectedModule) {\n    return (\n      <div className=\"module-quiz\">\n        <div className=\"container\">\n          <div className=\"quiz-header\">\n            <button onClick={backToModules} className=\"back-btn\">\n              ← Back to Modules\n            </button>\n            <h1>{selectedModule.title}</h1>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{ width: `${((currentQuestion + 1) / moduleQuestions.length) * 100}%` }}\n              ></div>\n            </div>\n            <p>\n              Question {currentQuestion + 1} of {moduleQuestions.length}\n            </p>\n          </div>\n\n          {!showResults ? (\n            <div className=\"question-card\">\n              <h3>{moduleQuestions[currentQuestion].question_text}</h3>\n              <p>\n                This is where your JSON question data will be displayed. The question text, options, and correct answers\n                will be loaded from your JSON files.\n              </p>\n\n              <div className=\"question-options\">\n                {moduleQuestions[currentQuestion].options.map((option) => (\n                  <div key={option.option_id} className=\"option\">\n                    <input\n                      type=\"radio\"\n                      id={`option${option.option_id}`}\n                      name=\"answer\"\n                      checked={userAnswers[moduleQuestions[currentQuestion].question_id] === option.option_id}\n                      onChange={() => handleAnswer(moduleQuestions[currentQuestion].question_id, option.option_id)}\n                    />\n                    <label htmlFor={`option${option.option_id}`}>{option.option_text}</label>\n                  </div>\n                ))}\n              </div>\n\n              <button onClick={nextQuestion} className=\"btn btn-primary next-btn\">\n                {currentQuestion < moduleQuestions.length - 1 ? \"Next Question\" : \"Finish Module\"}\n              </button>\n            </div>\n          ) : (\n            <div className=\"results-card\">\n              <h2>Module Complete!</h2>\n              <p>You have completed {selectedModule.title}</p>\n              <div className=\"results-stats\">\n                <div className=\"stat\">\n                  <span className=\"stat-number\">85%</span>\n                  <span className=\"stat-label\">Score</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-number\">{moduleQuestions.length}</span>\n                  <span className=\"stat-label\">Questions</span>\n                </div>\n              </div>\n              <button onClick={backToModules} className=\"btn btn-primary\">\n                Back to Modules\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"modules\">\n      <div className=\"container\">\n        <div className=\"modules-header\">\n          <h1>Learning Modules</h1>\n          <p>10 comprehensive modules covering all AWS Cloud Practitioner exam domains</p>\n        </div>\n\n        <div className=\"modules-grid\">\n          {modules.map((module) => (\n            <div key={module.id} className=\"module-card\">\n              <div className=\"module-header\">\n                <h3>{module.title}</h3>\n                <span className=\"question-count\">{module.questions} questions</span>\n              </div>\n\n              <div className=\"module-progress\">\n                <div className=\"progress-bar\">\n                  <div className=\"progress-fill\" style={{ width: module.completed ? \"100%\" : \"0%\" }}></div>\n                </div>\n                <span className=\"progress-text\">{module.completed ? \"Completed\" : \"Not Started\"}</span>\n              </div>\n\n              <button onClick={() => startModule(module)} className=\"btn btn-primary module-btn\">\n                {module.completed ? \"Review\" : \"Start Module\"}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Modules\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}