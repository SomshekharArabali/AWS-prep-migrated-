{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\omie1\\\\Desktop\\\\AWS react\\\\frontend\\\\src\\\\pages\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { apiClient } from \"../utils/api\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport \"./Questions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Questions = () => {\n  _s();\n  const [questionSets, setQuestionSets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedSet, setSelectedSet] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [quizMode, setQuizMode] = useState(\"practice\"); // 'practice' or 'exam'\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [startTime, setStartTime] = useState(null);\n  const {\n    updateProgress\n  } = useAuth();\n  useEffect(() => {\n    fetchQuestionSets();\n  }, []);\n  const fetchQuestionSets = async () => {\n    try {\n      const response = await apiClient.questions.getAll();\n      setQuestionSets(response.data);\n    } catch (error) {\n      console.error(\"Error fetching question sets:\", error);\n      // Fallback data\n      setQuestionSets([{\n        id: 1,\n        title: \"Practice Set 1: Cloud Concepts\",\n        questions: 65,\n        difficulty: \"Beginner\",\n        completed: false\n      }, {\n        id: 2,\n        title: \"Practice Set 2: AWS Core Services\",\n        questions: 85,\n        difficulty: \"Intermediate\",\n        completed: false\n      }, {\n        id: 11,\n        title: \"Full Practice Exam\",\n        questions: 65,\n        difficulty: \"Exam\",\n        completed: false\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const startQuestionSet = async (questionSet, mode = \"practice\") => {\n    try {\n      setLoading(true);\n      const response = await apiClient.questions.getById(questionSet.id);\n      setQuizQuestions(response.data.questions || []);\n      setSelectedSet(questionSet);\n      setQuizMode(mode);\n      setCurrentQuestion(0);\n      setUserAnswers({});\n      setShowResults(false);\n      setStartTime(Date.now());\n    } catch (error) {\n      console.error(\"Error loading question set:\", error);\n      // Use sample questions\n      setQuizQuestions([{\n        question_id: 1,\n        question_text: \"AWS Cloud Adoption Framework (CAF) is organized into how many perspectives?\",\n        options: [{\n          option_id: 1,\n          option_text: \"ten\"\n        }, {\n          option_id: 2,\n          option_text: \"eight\"\n        }, {\n          option_id: 3,\n          option_text: \"four\"\n        }, {\n          option_id: 4,\n          option_text: \"six\"\n        }],\n        correct_answer_id: 4\n      }]);\n      setSelectedSet(questionSet);\n      setQuizMode(mode);\n      setCurrentQuestion(0);\n      setUserAnswers({});\n      setShowResults(false);\n      setStartTime(Date.now());\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswer = (questionId, answerId) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [questionId]: answerId\n    }));\n  };\n  const nextQuestion = async () => {\n    if (currentQuestion < quizQuestions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      const timeSpent = Math.round((Date.now() - startTime) / 1000 / 60); // minutes\n\n      try {\n        const response = await apiClient.questions.submitQuiz(selectedSet.id, {\n          answers: userAnswers,\n          timeSpent,\n          mode: quizMode\n        });\n        console.log(\"Quiz results:\", response.data.results);\n        setShowResults(true);\n      } catch (error) {\n        console.error(\"Error submitting quiz:\", error);\n        setShowResults(true);\n      }\n    }\n  };\n  const backToQuestions = () => {\n    setSelectedSet(null);\n    setShowResults(false);\n  };\n  const getDifficultyColor = difficulty => {\n    switch (difficulty) {\n      case \"Beginner\":\n        return \"var(--primary-green)\";\n      case \"Intermediate\":\n        return \"var(--primary-blue)\";\n      case \"Advanced\":\n        return \"var(--primary-orange)\";\n      case \"Exam\":\n        return \"#DC3545\";\n      default:\n        return \"var(--text-gray)\";\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n      message: \"Loading question sets...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 12\n    }, this);\n  }\n  if (selectedSet) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-quiz\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quiz-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: backToQuestions,\n            className: \"back-btn\",\n            children: \"\\u2190 Back to Question Sets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: selectedSet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quiz-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"quiz-mode\",\n              children: quizMode === \"exam\" ? \"Exam Mode\" : \"Practice Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty\",\n              style: {\n                color: getDifficultyColor(selectedSet.difficulty)\n              },\n              children: selectedSet.difficulty\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${(currentQuestion + 1) / quizQuestions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestion + 1, \" of \", quizQuestions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), !showResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: quizQuestions[currentQuestion].question_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This is where your JSON question data will be displayed. The actual question text from your JSON files will appear here, along with the multiple choice options and explanations.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-options\",\n            children: quizQuestions[currentQuestion].options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                id: `option${option.option_id}`,\n                name: \"answer\",\n                checked: userAnswers[quizQuestions[currentQuestion].question_id] === option.option_id,\n                onChange: () => handleAnswer(quizQuestions[currentQuestion].question_id, option.option_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `option${option.option_id}`,\n                children: `${String.fromCharCode(65 + option.option_id - 1)}) ${option.option_text}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)]\n            }, option.option_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), quizMode === \"practice\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"explanation\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Explanation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"In practice mode, explanations will be shown here after answering each question.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextQuestion,\n            className: \"btn btn-primary next-btn\",\n            children: currentQuestion < quizQuestions.length - 1 ? \"Next Question\" : \"Finish Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Quiz Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You have completed \", selectedSet.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: \"78%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Score\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: quizQuestions.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Questions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-number\",\n                children: \"51\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Correct\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: backToQuestions,\n              className: \"btn btn-outline\",\n              children: \"Back to Question Sets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startQuestionSet(selectedSet, quizMode),\n              className: \"btn btn-primary\",\n              children: \"Retake Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Question Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"11 comprehensive question sets with 1100+ practice questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-grid\",\n        children: questionSets.map(questionSet => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-set-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: questionSet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-badges\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"difficulty-badge\",\n                style: {\n                  backgroundColor: getDifficultyColor(questionSet.difficulty)\n                },\n                children: questionSet.difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"question-count\",\n                children: [questionSet.questions, \" questions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-fill\",\n                style: {\n                  width: questionSet.completed ? \"100%\" : \"0%\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"progress-text\",\n              children: questionSet.completed ? \"Completed\" : \"Not Started\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startQuestionSet(questionSet, \"practice\"),\n              className: \"btn btn-outline practice-btn\",\n              children: \"Practice Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startQuestionSet(questionSet, \"exam\"),\n              className: \"btn btn-primary exam-btn\",\n              children: \"Exam Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, questionSet.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(Questions, \"AVtu2mB69KevWPnHoKVtdqTWvuM=\", false, function () {\n  return [useAuth];\n});\n_c = Questions;\nexport default Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","apiClient","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","Questions","questionSets","setQuestionSets","loading","setLoading","selectedSet","setSelectedSet","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","showResults","setShowResults","quizMode","setQuizMode","quizQuestions","setQuizQuestions","startTime","setStartTime","updateProgress","fetchQuestionSets","response","questions","getAll","data","error","console","id","title","difficulty","completed","startQuestionSet","questionSet","mode","getById","Date","now","question_id","question_text","options","option_id","option_text","correct_answer_id","handleAnswer","questionId","answerId","prev","nextQuestion","length","timeSpent","Math","round","submitQuiz","answers","log","results","backToQuestions","getDifficultyColor","message","fileName","lineNumber","columnNumber","className","children","onClick","style","color","width","map","option","type","name","checked","onChange","htmlFor","String","fromCharCode","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/omie1/Desktop/AWS react/frontend/src/pages/Questions.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { apiClient } from \"../utils/api\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport LoadingSpinner from \"../components/LoadingSpinner\"\nimport \"./Questions.css\"\n\nconst Questions = () => {\n  const [questionSets, setQuestionSets] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [selectedSet, setSelectedSet] = useState(null)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [userAnswers, setUserAnswers] = useState({})\n  const [showResults, setShowResults] = useState(false)\n  const [quizMode, setQuizMode] = useState(\"practice\") // 'practice' or 'exam'\n  const [quizQuestions, setQuizQuestions] = useState([])\n  const [startTime, setStartTime] = useState(null)\n  const { updateProgress } = useAuth()\n\n  useEffect(() => {\n    fetchQuestionSets()\n  }, [])\n\n  const fetchQuestionSets = async () => {\n    try {\n      const response = await apiClient.questions.getAll()\n      setQuestionSets(response.data)\n    } catch (error) {\n      console.error(\"Error fetching question sets:\", error)\n      // Fallback data\n      setQuestionSets([\n        { id: 1, title: \"Practice Set 1: Cloud Concepts\", questions: 65, difficulty: \"Beginner\", completed: false },\n        {\n          id: 2,\n          title: \"Practice Set 2: AWS Core Services\",\n          questions: 85,\n          difficulty: \"Intermediate\",\n          completed: false,\n        },\n        { id: 11, title: \"Full Practice Exam\", questions: 65, difficulty: \"Exam\", completed: false },\n      ])\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const startQuestionSet = async (questionSet, mode = \"practice\") => {\n    try {\n      setLoading(true)\n      const response = await apiClient.questions.getById(questionSet.id)\n      setQuizQuestions(response.data.questions || [])\n      setSelectedSet(questionSet)\n      setQuizMode(mode)\n      setCurrentQuestion(0)\n      setUserAnswers({})\n      setShowResults(false)\n      setStartTime(Date.now())\n    } catch (error) {\n      console.error(\"Error loading question set:\", error)\n      // Use sample questions\n      setQuizQuestions([\n        {\n          question_id: 1,\n          question_text: \"AWS Cloud Adoption Framework (CAF) is organized into how many perspectives?\",\n          options: [\n            { option_id: 1, option_text: \"ten\" },\n            { option_id: 2, option_text: \"eight\" },\n            { option_id: 3, option_text: \"four\" },\n            { option_id: 4, option_text: \"six\" },\n          ],\n          correct_answer_id: 4,\n        },\n      ])\n      setSelectedSet(questionSet)\n      setQuizMode(mode)\n      setCurrentQuestion(0)\n      setUserAnswers({})\n      setShowResults(false)\n      setStartTime(Date.now())\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleAnswer = (questionId, answerId) => {\n    setUserAnswers((prev) => ({\n      ...prev,\n      [questionId]: answerId,\n    }))\n  }\n\n  const nextQuestion = async () => {\n    if (currentQuestion < quizQuestions.length - 1) {\n      setCurrentQuestion((prev) => prev + 1)\n    } else {\n      const timeSpent = Math.round((Date.now() - startTime) / 1000 / 60) // minutes\n\n      try {\n        const response = await apiClient.questions.submitQuiz(selectedSet.id, {\n          answers: userAnswers,\n          timeSpent,\n          mode: quizMode,\n        })\n\n        console.log(\"Quiz results:\", response.data.results)\n        setShowResults(true)\n      } catch (error) {\n        console.error(\"Error submitting quiz:\", error)\n        setShowResults(true)\n      }\n    }\n  }\n\n  const backToQuestions = () => {\n    setSelectedSet(null)\n    setShowResults(false)\n  }\n\n  const getDifficultyColor = (difficulty) => {\n    switch (difficulty) {\n      case \"Beginner\":\n        return \"var(--primary-green)\"\n      case \"Intermediate\":\n        return \"var(--primary-blue)\"\n      case \"Advanced\":\n        return \"var(--primary-orange)\"\n      case \"Exam\":\n        return \"#DC3545\"\n      default:\n        return \"var(--text-gray)\"\n    }\n  }\n\n  if (loading) {\n    return <LoadingSpinner message=\"Loading question sets...\" />\n  }\n\n  if (selectedSet) {\n    return (\n      <div className=\"question-quiz\">\n        <div className=\"container\">\n          <div className=\"quiz-header\">\n            <button onClick={backToQuestions} className=\"back-btn\">\n              ← Back to Question Sets\n            </button>\n            <h1>{selectedSet.title}</h1>\n            <div className=\"quiz-info\">\n              <span className=\"quiz-mode\">{quizMode === \"exam\" ? \"Exam Mode\" : \"Practice Mode\"}</span>\n              <span className=\"difficulty\" style={{ color: getDifficultyColor(selectedSet.difficulty) }}>\n                {selectedSet.difficulty}\n              </span>\n            </div>\n            <div className=\"progress-bar\">\n              <div\n                className=\"progress-fill\"\n                style={{ width: `${((currentQuestion + 1) / quizQuestions.length) * 100}%` }}\n              ></div>\n            </div>\n            <p>\n              Question {currentQuestion + 1} of {quizQuestions.length}\n            </p>\n          </div>\n\n          {!showResults ? (\n            <div className=\"question-card\">\n              <h3>{quizQuestions[currentQuestion].question_text}</h3>\n              <p>\n                This is where your JSON question data will be displayed. The actual question text from your JSON files\n                will appear here, along with the multiple choice options and explanations.\n              </p>\n\n              <div className=\"question-options\">\n                {quizQuestions[currentQuestion].options.map((option) => (\n                  <div key={option.option_id} className=\"option\">\n                    <input\n                      type=\"radio\"\n                      id={`option${option.option_id}`}\n                      name=\"answer\"\n                      checked={userAnswers[quizQuestions[currentQuestion].question_id] === option.option_id}\n                      onChange={() => handleAnswer(quizQuestions[currentQuestion].question_id, option.option_id)}\n                    />\n                    <label\n                      htmlFor={`option${option.option_id}`}\n                    >{`${String.fromCharCode(65 + option.option_id - 1)}) ${option.option_text}`}</label>\n                  </div>\n                ))}\n              </div>\n\n              {quizMode === \"practice\" && (\n                <div className=\"explanation\">\n                  <h4>Explanation:</h4>\n                  <p>In practice mode, explanations will be shown here after answering each question.</p>\n                </div>\n              )}\n\n              <button onClick={nextQuestion} className=\"btn btn-primary next-btn\">\n                {currentQuestion < quizQuestions.length - 1 ? \"Next Question\" : \"Finish Quiz\"}\n              </button>\n            </div>\n          ) : (\n            <div className=\"results-card\">\n              <h2>Quiz Complete!</h2>\n              <p>You have completed {selectedSet.title}</p>\n              <div className=\"results-stats\">\n                <div className=\"stat\">\n                  <span className=\"stat-number\">78%</span>\n                  <span className=\"stat-label\">Score</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-number\">{quizQuestions.length}</span>\n                  <span className=\"stat-label\">Questions</span>\n                </div>\n                <div className=\"stat\">\n                  <span className=\"stat-number\">51</span>\n                  <span className=\"stat-label\">Correct</span>\n                </div>\n              </div>\n              <div className=\"results-actions\">\n                <button onClick={backToQuestions} className=\"btn btn-outline\">\n                  Back to Question Sets\n                </button>\n                <button onClick={() => startQuestionSet(selectedSet, quizMode)} className=\"btn btn-primary\">\n                  Retake Quiz\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"questions\">\n      <div className=\"container\">\n        <div className=\"questions-header\">\n          <h1>Question Sets</h1>\n          <p>11 comprehensive question sets with 1100+ practice questions</p>\n        </div>\n\n        <div className=\"questions-grid\">\n          {questionSets.map((questionSet) => (\n            <div key={questionSet.id} className=\"question-set-card\">\n              <div className=\"card-header\">\n                <h3>{questionSet.title}</h3>\n                <div className=\"card-badges\">\n                  <span\n                    className=\"difficulty-badge\"\n                    style={{ backgroundColor: getDifficultyColor(questionSet.difficulty) }}\n                  >\n                    {questionSet.difficulty}\n                  </span>\n                  <span className=\"question-count\">{questionSet.questions} questions</span>\n                </div>\n              </div>\n\n              <div className=\"card-progress\">\n                <div className=\"progress-bar\">\n                  <div className=\"progress-fill\" style={{ width: questionSet.completed ? \"100%\" : \"0%\" }}></div>\n                </div>\n                <span className=\"progress-text\">{questionSet.completed ? \"Completed\" : \"Not Started\"}</span>\n              </div>\n\n              <div className=\"card-actions\">\n                <button\n                  onClick={() => startQuestionSet(questionSet, \"practice\")}\n                  className=\"btn btn-outline practice-btn\"\n                >\n                  Practice Mode\n                </button>\n                <button onClick={() => startQuestionSet(questionSet, \"exam\")} className=\"btn btn-primary exam-btn\">\n                  Exam Mode\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Questions\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAT,EAAA;EACtB,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,UAAU,CAAC,EAAC;EACrD,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAE0B;EAAe,CAAC,GAAGvB,OAAO,CAAC,CAAC;EAEpCF,SAAS,CAAC,MAAM;IACd0B,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1B,SAAS,CAAC2B,SAAS,CAACC,MAAM,CAAC,CAAC;MACnDrB,eAAe,CAACmB,QAAQ,CAACG,IAAI,CAAC;IAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD;MACAvB,eAAe,CAAC,CACd;QAAEyB,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,gCAAgC;QAAEN,SAAS,EAAE,EAAE;QAAEO,UAAU,EAAE,UAAU;QAAEC,SAAS,EAAE;MAAM,CAAC,EAC3G;QACEH,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,mCAAmC;QAC1CN,SAAS,EAAE,EAAE;QACbO,UAAU,EAAE,cAAc;QAC1BC,SAAS,EAAE;MACb,CAAC,EACD;QAAEH,EAAE,EAAE,EAAE;QAAEC,KAAK,EAAE,oBAAoB;QAAEN,SAAS,EAAE,EAAE;QAAEO,UAAU,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAM,CAAC,CAC7F,CAAC;IACJ,CAAC,SAAS;MACR1B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM2B,gBAAgB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,IAAI,GAAG,UAAU,KAAK;IACjE,IAAI;MACF7B,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMiB,QAAQ,GAAG,MAAM1B,SAAS,CAAC2B,SAAS,CAACY,OAAO,CAACF,WAAW,CAACL,EAAE,CAAC;MAClEX,gBAAgB,CAACK,QAAQ,CAACG,IAAI,CAACF,SAAS,IAAI,EAAE,CAAC;MAC/ChB,cAAc,CAAC0B,WAAW,CAAC;MAC3BlB,WAAW,CAACmB,IAAI,CAAC;MACjBzB,kBAAkB,CAAC,CAAC,CAAC;MACrBE,cAAc,CAAC,CAAC,CAAC,CAAC;MAClBE,cAAc,CAAC,KAAK,CAAC;MACrBM,YAAY,CAACiB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;MACAT,gBAAgB,CAAC,CACf;QACEqB,WAAW,EAAE,CAAC;QACdC,aAAa,EAAE,6EAA6E;QAC5FC,OAAO,EAAE,CACP;UAAEC,SAAS,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAM,CAAC,EACpC;UAAED,SAAS,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAQ,CAAC,EACtC;UAAED,SAAS,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAO,CAAC,EACrC;UAAED,SAAS,EAAE,CAAC;UAAEC,WAAW,EAAE;QAAM,CAAC,CACrC;QACDC,iBAAiB,EAAE;MACrB,CAAC,CACF,CAAC;MACFpC,cAAc,CAAC0B,WAAW,CAAC;MAC3BlB,WAAW,CAACmB,IAAI,CAAC;MACjBzB,kBAAkB,CAAC,CAAC,CAAC;MACrBE,cAAc,CAAC,CAAC,CAAC,CAAC;MAClBE,cAAc,CAAC,KAAK,CAAC;MACrBM,YAAY,CAACiB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;IAC1B,CAAC,SAAS;MACRhC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMuC,YAAY,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;IAC7CnC,cAAc,CAAEoC,IAAI,KAAM;MACxB,GAAGA,IAAI;MACP,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIxC,eAAe,GAAGQ,aAAa,CAACiC,MAAM,GAAG,CAAC,EAAE;MAC9CxC,kBAAkB,CAAEsC,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IACxC,CAAC,MAAM;MACL,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAChB,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGnB,SAAS,IAAI,IAAI,GAAG,EAAE,CAAC,EAAC;;MAEnE,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAM1B,SAAS,CAAC2B,SAAS,CAAC8B,UAAU,CAAC/C,WAAW,CAACsB,EAAE,EAAE;UACpE0B,OAAO,EAAE5C,WAAW;UACpBwC,SAAS;UACThB,IAAI,EAAEpB;QACR,CAAC,CAAC;QAEFa,OAAO,CAAC4B,GAAG,CAAC,eAAe,EAAEjC,QAAQ,CAACG,IAAI,CAAC+B,OAAO,CAAC;QACnD3C,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9Cb,cAAc,CAAC,IAAI,CAAC;MACtB;IACF;EACF,CAAC;EAED,MAAM4C,eAAe,GAAGA,CAAA,KAAM;IAC5BlD,cAAc,CAAC,IAAI,CAAC;IACpBM,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAM6C,kBAAkB,GAAI5B,UAAU,IAAK;IACzC,QAAQA,UAAU;MAChB,KAAK,UAAU;QACb,OAAO,sBAAsB;MAC/B,KAAK,cAAc;QACjB,OAAO,qBAAqB;MAC9B,KAAK,UAAU;QACb,OAAO,uBAAuB;MAChC,KAAK,MAAM;QACT,OAAO,SAAS;MAClB;QACE,OAAO,kBAAkB;IAC7B;EACF,CAAC;EAED,IAAI1B,OAAO,EAAE;IACX,oBAAOJ,OAAA,CAACF,cAAc;MAAC6D,OAAO,EAAC;IAA0B;MAAAC,QAAA,EAAArE,YAAA;MAAAsE,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9D;EAEA,IAAIxD,WAAW,EAAE;IACf,oBACEN,OAAA;MAAK+D,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BhE,OAAA;QAAK+D,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBhE,OAAA;UAAK+D,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BhE,OAAA;YAAQiE,OAAO,EAAER,eAAgB;YAACM,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAEvD;YAAAJ,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT9D,OAAA;YAAAgE,QAAA,EAAK1D,WAAW,CAACuB;UAAK;YAAA+B,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5B9D,OAAA;YAAK+D,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBhE,OAAA;cAAM+D,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAElD,QAAQ,KAAK,MAAM,GAAG,WAAW,GAAG;YAAe;cAAA8C,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxF9D,OAAA;cAAM+D,SAAS,EAAC,YAAY;cAACG,KAAK,EAAE;gBAAEC,KAAK,EAAET,kBAAkB,CAACpD,WAAW,CAACwB,UAAU;cAAE,CAAE;cAAAkC,QAAA,EACvF1D,WAAW,CAACwB;YAAU;cAAA8B,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC;UAAA;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN9D,OAAA;YAAK+D,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BhE,OAAA;cACE+D,SAAS,EAAC,eAAe;cACzBG,KAAK,EAAE;gBAAEE,KAAK,EAAE,GAAI,CAAC5D,eAAe,GAAG,CAAC,IAAIQ,aAAa,CAACiC,MAAM,GAAI,GAAG;cAAI;YAAE;cAAAW,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OACzE;UAAC;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN9D,OAAA;YAAAgE,QAAA,GAAG,WACQ,EAACxD,eAAe,GAAG,CAAC,EAAC,MAAI,EAACQ,aAAa,CAACiC,MAAM;UAAA;YAAAW,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC;QAAA;UAAAF,QAAA,EAAArE,YAAA;UAAAsE,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,EAEL,CAAClD,WAAW,gBACXZ,OAAA;UAAK+D,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BhE,OAAA;YAAAgE,QAAA,EAAKhD,aAAa,CAACR,eAAe,CAAC,CAAC+B;UAAa;YAAAqB,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvD9D,OAAA;YAAAgE,QAAA,EAAG;UAGH;YAAAJ,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEJ9D,OAAA;YAAK+D,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9BhD,aAAa,CAACR,eAAe,CAAC,CAACgC,OAAO,CAAC6B,GAAG,CAAEC,MAAM,iBACjDtE,OAAA;cAA4B+D,SAAS,EAAC,QAAQ;cAAAC,QAAA,gBAC5ChE,OAAA;gBACEuE,IAAI,EAAC,OAAO;gBACZ3C,EAAE,EAAE,SAAS0C,MAAM,CAAC7B,SAAS,EAAG;gBAChC+B,IAAI,EAAC,QAAQ;gBACbC,OAAO,EAAE/D,WAAW,CAACM,aAAa,CAACR,eAAe,CAAC,CAAC8B,WAAW,CAAC,KAAKgC,MAAM,CAAC7B,SAAU;gBACtFiC,QAAQ,EAAEA,CAAA,KAAM9B,YAAY,CAAC5B,aAAa,CAACR,eAAe,CAAC,CAAC8B,WAAW,EAAEgC,MAAM,CAAC7B,SAAS;cAAE;gBAAAmB,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAC5F,CAAC,eACF9D,OAAA;gBACE2E,OAAO,EAAE,SAASL,MAAM,CAAC7B,SAAS,EAAG;gBAAAuB,QAAA,EACrC,GAAGY,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGP,MAAM,CAAC7B,SAAS,GAAG,CAAC,CAAC,KAAK6B,MAAM,CAAC5B,WAAW;cAAE;gBAAAkB,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GAV7EQ,MAAM,CAAC7B,SAAS;cAAAmB,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAWrB,CACN;UAAC;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAELhD,QAAQ,KAAK,UAAU,iBACtBd,OAAA;YAAK+D,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BhE,OAAA;cAAAgE,QAAA,EAAI;YAAY;cAAAJ,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB9D,OAAA;cAAAgE,QAAA,EAAG;YAAgF;cAAAJ,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACpF,CACN,eAED9D,OAAA;YAAQiE,OAAO,EAAEjB,YAAa;YAACe,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EAChExD,eAAe,GAAGQ,aAAa,CAACiC,MAAM,GAAG,CAAC,GAAG,eAAe,GAAG;UAAa;YAAAW,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC;QAAA;UAAAF,QAAA,EAAArE,YAAA;UAAAsE,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAEN9D,OAAA;UAAK+D,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BhE,OAAA;YAAAgE,QAAA,EAAI;UAAc;YAAAJ,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvB9D,OAAA;YAAAgE,QAAA,GAAG,qBAAmB,EAAC1D,WAAW,CAACuB,KAAK;UAAA;YAAA+B,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7C9D,OAAA;YAAK+D,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BhE,OAAA;cAAK+D,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnBhE,OAAA;gBAAM+D,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAG;gBAAAJ,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACxC9D,OAAA;gBAAM+D,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAK;gBAAAJ,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAF,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eACN9D,OAAA;cAAK+D,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnBhE,OAAA;gBAAM+D,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAEhD,aAAa,CAACiC;cAAM;gBAAAW,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC3D9D,OAAA;gBAAM+D,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAS;gBAAAJ,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAF,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAC1C,CAAC,eACN9D,OAAA;cAAK+D,SAAS,EAAC,MAAM;cAAAC,QAAA,gBACnBhE,OAAA;gBAAM+D,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAE;gBAAAJ,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvC9D,OAAA;gBAAM+D,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAO;gBAAAJ,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAF,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC;UAAA;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACN9D,OAAA;YAAK+D,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BhE,OAAA;cAAQiE,OAAO,EAAER,eAAgB;cAACM,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAE9D;cAAAJ,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT9D,OAAA;cAAQiE,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAAC1B,WAAW,EAAEQ,QAAQ,CAAE;cAACiD,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAE5F;cAAAJ,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAF,QAAA,EAAArE,YAAA;UAAAsE,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAF,QAAA,EAAArE,YAAA;QAAAsE,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAF,QAAA,EAAArE,YAAA;MAAAsE,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACE9D,OAAA;IAAK+D,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBhE,OAAA;MAAK+D,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBhE,OAAA;QAAK+D,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BhE,OAAA;UAAAgE,QAAA,EAAI;QAAa;UAAAJ,QAAA,EAAArE,YAAA;UAAAsE,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB9D,OAAA;UAAAgE,QAAA,EAAG;QAA4D;UAAAJ,QAAA,EAAArE,YAAA;UAAAsE,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAF,QAAA,EAAArE,YAAA;QAAAsE,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eAEN9D,OAAA;QAAK+D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5B9D,YAAY,CAACmE,GAAG,CAAEpC,WAAW,iBAC5BjC,OAAA;UAA0B+D,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBACrDhE,OAAA;YAAK+D,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BhE,OAAA;cAAAgE,QAAA,EAAK/B,WAAW,CAACJ;YAAK;cAAA+B,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5B9D,OAAA;cAAK+D,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1BhE,OAAA;gBACE+D,SAAS,EAAC,kBAAkB;gBAC5BG,KAAK,EAAE;kBAAEY,eAAe,EAAEpB,kBAAkB,CAACzB,WAAW,CAACH,UAAU;gBAAE,CAAE;gBAAAkC,QAAA,EAEtE/B,WAAW,CAACH;cAAU;gBAAA8B,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OACnB,CAAC,eACP9D,OAAA;gBAAM+D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,GAAE/B,WAAW,CAACV,SAAS,EAAC,YAAU;cAAA;gBAAAqC,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAF,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OACtE,CAAC;UAAA;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN9D,OAAA;YAAK+D,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5BhE,OAAA;cAAK+D,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BhE,OAAA;gBAAK+D,SAAS,EAAC,eAAe;gBAACG,KAAK,EAAE;kBAAEE,KAAK,EAAEnC,WAAW,CAACF,SAAS,GAAG,MAAM,GAAG;gBAAK;cAAE;gBAAA6B,QAAA,EAAArE,YAAA;gBAAAsE,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAF,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAC3F,CAAC,eACN9D,OAAA;cAAM+D,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAE/B,WAAW,CAACF,SAAS,GAAG,WAAW,GAAG;YAAa;cAAA6B,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC,eAEN9D,OAAA;YAAK+D,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BhE,OAAA;cACEiE,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAACC,WAAW,EAAE,UAAU,CAAE;cACzD8B,SAAS,EAAC,8BAA8B;cAAAC,QAAA,EACzC;YAED;cAAAJ,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACT9D,OAAA;cAAQiE,OAAO,EAAEA,CAAA,KAAMjC,gBAAgB,CAACC,WAAW,EAAE,MAAM,CAAE;cAAC8B,SAAS,EAAC,0BAA0B;cAAAC,QAAA,EAAC;YAEnG;cAAAJ,QAAA,EAAArE,YAAA;cAAAsE,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAF,QAAA,EAAArE,YAAA;YAAAsE,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA,GA/BE7B,WAAW,CAACL,EAAE;UAAAgC,QAAA,EAAArE,YAAA;UAAAsE,UAAA;UAAAC,YAAA;QAAA,OAgCnB,CACN;MAAC;QAAAF,QAAA,EAAArE,YAAA;QAAAsE,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAF,QAAA,EAAArE,YAAA;MAAAsE,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAF,QAAA,EAAArE,YAAA;IAAAsE,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAtE,EAAA,CAjRKS,SAAS;EAAA,QAUcJ,OAAO;AAAA;AAAAkF,EAAA,GAV9B9E,SAAS;AAmRf,eAAeA,SAAS;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}